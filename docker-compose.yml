# filepath: /home/nack/price-alert/docker-compose.yml
version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: price-alert-bot
    restart: unless-stopped
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/simple-health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=info
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/price_alert
      - REDIS_URL=redis://redis:6379
      - COINGECKO_API_KEY=${COINGECKO_API_KEY}
      - BINANCE_API_KEY=${BINANCE_API_KEY}
      - BINANCE_API_SECRET=${BINANCE_API_SECRET}
      - COINMARKETCAP_API_KEY=${COINMARKETCAP_API_KEY}
      - NEWS_API_KEY=${NEWS_API_KEY}
      - ALERT_CHECK_INTERVAL=60000
      - MAX_FREE_ALERTS=10
      - QUEUE_CONCURRENCY=10
      - WEBSOCKET_CONCURRENCY=20
      - MAX_WEBSOCKET_CONNECTIONS=50
      - WEBSOCKET_CONNECTION_POOL_SIZE=25
      - WEBSOCKET_RECONNECT_INTERVAL=5000
      - WEBSOCKET_RECONNECT_ATTEMPTS=5
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
      - redis

  db:
    image: postgres:16-alpine
    container_name: price-alert-db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=postgres
      - POSTGRES_DB=price_alert
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: price-alert-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

volumes:
  postgres_data:
  redis_data:
